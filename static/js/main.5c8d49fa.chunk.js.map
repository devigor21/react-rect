{"version":3,"sources":["components/Canvas.jsx","components/Form.jsx","handlers/handleCanvas.js","App.js","index.js"],"names":["Canvas","canvasRef","width","height","className","ref","Form","canvasWidth","canvasHeight","setLineWidth","setCanvasWidth","setCanvasHeight","htmlFor","onChange","e","target","value","id","type","defaultValue","min","max","handleCanvas","lineWidth","canvas","current","ctx","getContext","currentX","currentY","draw","saved","addEventListener","pageX","offsetLeft","pageY","offsetTop","beginPath","moveTo","toDataURL","x","y","img","Image","src","onload","a","clearRect","drawImage","lineTo","stroke","drawLine","App","useState","useRef","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAaA,EAAS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACzC,OACE,wBAAQC,UAAU,SAASC,IAAKJ,EAAWC,MAAOA,EAAOC,OAAQA,KCFxDG,EAAO,SAAC,GAMd,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,eACAC,EACI,EADJA,gBAEA,OACE,sBAAKP,UAAU,OAAf,UACE,uBAAOQ,QAAQ,aAAf,uFACA,uBACEC,SAAU,SAACC,GAAD,OAAOL,EAAaK,EAAEC,OAAOC,QACvCZ,UAAU,QACVa,GAAG,aACHC,KAAK,SACLC,aAAc,EACdC,IAAK,EACLC,IAAK,KAEP,uBAAOT,QAAQ,aAAf,uFACA,uBACEC,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAEC,OAAOC,QACzCZ,UAAU,QACVa,GAAG,aACHC,KAAK,OACLF,MAAOT,IAET,uBAAOK,QAAQ,cAAf,uFACA,uBACEC,SAAU,SAACC,GAAD,OAAOH,EAAgBG,EAAEC,OAAOC,QAC1CZ,UAAU,QACVa,GAAG,cACHC,KAAK,OACLF,MAAOR,Q,uBCjCFc,EAAe,SAACjB,EAAKkB,GAChC,IAAMC,EAASnB,EAAIoB,QACbC,EAAMF,EAAOG,WAAW,MAE9BD,EAAIH,UAAYA,EAChB,IAAIK,EAAW,EACXC,EAAW,EACXC,GAAO,EACPC,EAAQ,KAkCZP,EAAOQ,iBAAiB,aAnBxB,SAAmBlB,GACjBgB,GAAO,EACPF,EAAWd,EAAEmB,MAAQnB,EAAEC,OAAOmB,WAC9BL,EAAWf,EAAEqB,MAAQrB,EAAEC,OAAOqB,UAC9BV,EAAIW,YACJX,EAAIY,OAAOV,EAAUC,GACrBE,EAAQP,EAAOe,eAa+B,GAChDf,EAAOQ,iBAAiB,aAXxB,SAAmBlB,GACbgB,GAvBN,SAAkBU,EAAGC,GACnB,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMb,EACVW,EAAIG,OAAJ,sBAAa,sBAAAC,EAAA,sDACXpB,EAAIqB,UAAU,EAAG,EAAGvB,EAAOtB,MAAOsB,EAAOrB,QACzCuB,EAAIsB,UAAUN,EAAK,EAAG,EAAGlB,EAAOtB,MAAOsB,EAAOrB,QAC9CuB,EAAIW,YACJX,EAAIY,OAAOV,EAAUC,GACrBH,EAAIuB,OAAOT,EAAGC,GACdf,EAAIwB,SANO,2CAqBXC,CAASrC,EAAEmB,MAAQnB,EAAEC,OAAOmB,WAAYpB,EAAEqB,MAAQrB,EAAEC,OAAOqB,cASf,GAChDZ,EAAOQ,iBAAiB,WANxB,WACEF,GAAO,KAKmC,I,MCtC/B,SAASsB,IACtB,MAAkCC,mBAAS,GAA3C,mBAAO9B,EAAP,KAAkBd,EAAlB,KACA,EAAsC4C,mBAAS,KAA/C,mBAAO9C,EAAP,KAAoBG,EAApB,KACA,EAAwC2C,mBAAS,KAAjD,mBAAO7C,EAAP,KAAqBG,EAArB,KACMV,EAAYqD,iBAAO,MAMzB,OAJAC,qBAAU,WACRjC,EAAarB,EAAWsB,KACvB,CAACA,EAAWhB,EAAaC,IAG1B,sBAAKJ,UAAU,YAAf,UACE,cAAC,EAAD,CACEG,YAAaA,EACbC,aAAcA,EACdC,aAAcA,EACdC,eAAgBA,EAChBC,gBAAiBA,IACnB,cAAC,EAAD,CACEV,UAAWA,EACXC,MAAOK,EACPJ,OAAQK,OCvBhBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c8d49fa.chunk.js","sourcesContent":["export const Canvas = ({ canvasRef, width, height }) => {\n  return (\n    <canvas className=\"canvas\" ref={canvasRef} width={width} height={height} />\n  );\n};\n","export const Form = ({\n  canvasWidth,\n  canvasHeight,\n  setLineWidth,\n  setCanvasWidth,\n  setCanvasHeight,\n}) => {\n  return (\n    <div className=\"form\">\n      <label htmlFor=\"line-width\">Толщина линии</label>\n      <input\n        onChange={(e) => setLineWidth(e.target.value)}\n        className=\"input\"\n        id=\"line-width\"\n        type=\"number\"\n        defaultValue={1}\n        min={1}\n        max={10}\n      />\n      <label htmlFor=\"line-width\">Ширина холста</label>\n      <input\n        onChange={(e) => setCanvasWidth(e.target.value)}\n        className=\"input\"\n        id=\"line-width\"\n        type=\"text\"\n        value={canvasWidth}\n      />\n      <label htmlFor=\"line-height\">Высота холста</label>\n      <input\n        onChange={(e) => setCanvasHeight(e.target.value)}\n        className=\"input\"\n        id=\"line-height\"\n        type=\"text\"\n        value={canvasHeight}\n      />\n    </div>\n  );\n};\n","export const handleCanvas = (ref, lineWidth) => {\n  const canvas = ref.current;\n  const ctx = canvas.getContext('2d');\n\n  ctx.lineWidth = lineWidth;\n  let currentX = 0;\n  let currentY = 0;\n  let draw = false;\n  let saved = null;\n\n  function drawLine(x, y) {\n    const img = new Image();\n    img.src = saved;\n    img.onload = async function () {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      ctx.moveTo(currentX, currentY);\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  }\n\n  function mouseDown(e) {\n    draw = true;\n    currentX = e.pageX - e.target.offsetLeft;\n    currentY = e.pageY - e.target.offsetTop;\n    ctx.beginPath();\n    ctx.moveTo(currentX, currentY);\n    saved = canvas.toDataURL();\n  }\n\n  function mouseMove(e) {\n    if (draw) {\n      drawLine(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n    }\n  }\n\n  function mouseUp() {\n    draw = false;\n  }\n\n  canvas.addEventListener(\"mousedown\", mouseDown, false);\n  canvas.addEventListener(\"mousemove\", mouseMove, false);\n  canvas.addEventListener(\"mouseup\", mouseUp, false);\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { Canvas } from './components/Canvas';\nimport { Form } from './components/Form';\nimport { handleCanvas } from './handlers/handleCanvas';\nimport './App.css';\n\nexport default function App() {\n  const [lineWidth, setLineWidth] = useState(1);\n  const [canvasWidth, setCanvasWidth] = useState(800);\n  const [canvasHeight, setCanvasHeight] = useState(600);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    handleCanvas(canvasRef, lineWidth);\n  }, [lineWidth, canvasWidth, canvasHeight]);\n\n  return (\n    <div className=\"container\">\n      <Form\n        canvasWidth={canvasWidth}\n        canvasHeight={canvasHeight}\n        setLineWidth={setLineWidth}\n        setCanvasWidth={setCanvasWidth}\n        setCanvasHeight={setCanvasHeight} />\n      <Canvas\n        canvasRef={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}